// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prio/proto/algorithm_parameters.proto

#include "prio/proto/algorithm_parameters.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace private_statistics {
namespace prio {
namespace proto {
class PrioAlgorithmParametersDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrioAlgorithmParameters> _instance;
} _PrioAlgorithmParameters_default_instance_;
}  // namespace proto
}  // namespace prio
}  // namespace private_statistics
static void InitDefaultsscc_info_PrioAlgorithmParameters_prio_2fproto_2falgorithm_5fparameters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::private_statistics::prio::proto::_PrioAlgorithmParameters_default_instance_;
    new (ptr) ::private_statistics::prio::proto::PrioAlgorithmParameters();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::private_statistics::prio::proto::PrioAlgorithmParameters::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrioAlgorithmParameters_prio_2fproto_2falgorithm_5fparameters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PrioAlgorithmParameters_prio_2fproto_2falgorithm_5fparameters_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_prio_2fproto_2falgorithm_5fparameters_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_prio_2fproto_2falgorithm_5fparameters_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_prio_2fproto_2falgorithm_5fparameters_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_prio_2fproto_2falgorithm_5fparameters_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::private_statistics::prio::proto::PrioAlgorithmParameters, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::private_statistics::prio::proto::PrioAlgorithmParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::private_statistics::prio::proto::PrioAlgorithmParameters, bins_),
  PROTOBUF_FIELD_OFFSET(::private_statistics::prio::proto::PrioAlgorithmParameters, epsilon_),
  PROTOBUF_FIELD_OFFSET(::private_statistics::prio::proto::PrioAlgorithmParameters, prime_),
  PROTOBUF_FIELD_OFFSET(::private_statistics::prio::proto::PrioAlgorithmParameters, number_servers_),
  PROTOBUF_FIELD_OFFSET(::private_statistics::prio::proto::PrioAlgorithmParameters, hamming_weight_),
  0,
  3,
  4,
  2,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::private_statistics::prio::proto::PrioAlgorithmParameters)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::private_statistics::prio::proto::_PrioAlgorithmParameters_default_instance_),
};

const char descriptor_table_protodef_prio_2fproto_2falgorithm_5fparameters_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%prio/proto/algorithm_parameters.proto\022"
  "\035private_statistics.prio.proto\"\212\001\n\027PrioA"
  "lgorithmParameters\022\014\n\004bins\030\001 \001(\005\022\023\n\007epsi"
  "lon\030\002 \001(\001:\00212\022\031\n\005prime\030\003 \001(\004:\n4293918721"
  "\022\031\n\016number_servers\030\004 \001(\005:\0012\022\026\n\016hamming_w"
  "eight\030\005 \001(\005B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_prio_2fproto_2falgorithm_5fparameters_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_prio_2fproto_2falgorithm_5fparameters_2eproto_sccs[1] = {
  &scc_info_PrioAlgorithmParameters_prio_2fproto_2falgorithm_5fparameters_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_prio_2fproto_2falgorithm_5fparameters_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_prio_2fproto_2falgorithm_5fparameters_2eproto = {
  false, false, descriptor_table_protodef_prio_2fproto_2falgorithm_5fparameters_2eproto, "prio/proto/algorithm_parameters.proto", 215,
  &descriptor_table_prio_2fproto_2falgorithm_5fparameters_2eproto_once, descriptor_table_prio_2fproto_2falgorithm_5fparameters_2eproto_sccs, descriptor_table_prio_2fproto_2falgorithm_5fparameters_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_prio_2fproto_2falgorithm_5fparameters_2eproto::offsets,
  file_level_metadata_prio_2fproto_2falgorithm_5fparameters_2eproto, 1, file_level_enum_descriptors_prio_2fproto_2falgorithm_5fparameters_2eproto, file_level_service_descriptors_prio_2fproto_2falgorithm_5fparameters_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_prio_2fproto_2falgorithm_5fparameters_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_prio_2fproto_2falgorithm_5fparameters_2eproto)), true);
namespace private_statistics {
namespace prio {
namespace proto {

// ===================================================================

void PrioAlgorithmParameters::InitAsDefaultInstance() {
}
class PrioAlgorithmParameters::_Internal {
 public:
  using HasBits = decltype(std::declval<PrioAlgorithmParameters>()._has_bits_);
  static void set_has_bins(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_epsilon(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_prime(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_number_servers(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_hamming_weight(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PrioAlgorithmParameters::PrioAlgorithmParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:private_statistics.prio.proto.PrioAlgorithmParameters)
}
PrioAlgorithmParameters::PrioAlgorithmParameters(const PrioAlgorithmParameters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&bins_, &from.bins_,
    static_cast<size_t>(reinterpret_cast<char*>(&prime_) -
    reinterpret_cast<char*>(&bins_)) + sizeof(prime_));
  // @@protoc_insertion_point(copy_constructor:private_statistics.prio.proto.PrioAlgorithmParameters)
}

void PrioAlgorithmParameters::SharedCtor() {
  ::memset(&bins_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hamming_weight_) -
      reinterpret_cast<char*>(&bins_)) + sizeof(hamming_weight_));
  number_servers_ = 2;
  epsilon_ = 12;
  prime_ = PROTOBUF_ULONGLONG(4293918721);
}

PrioAlgorithmParameters::~PrioAlgorithmParameters() {
  // @@protoc_insertion_point(destructor:private_statistics.prio.proto.PrioAlgorithmParameters)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrioAlgorithmParameters::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PrioAlgorithmParameters::ArenaDtor(void* object) {
  PrioAlgorithmParameters* _this = reinterpret_cast< PrioAlgorithmParameters* >(object);
  (void)_this;
}
void PrioAlgorithmParameters::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrioAlgorithmParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrioAlgorithmParameters& PrioAlgorithmParameters::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrioAlgorithmParameters_prio_2fproto_2falgorithm_5fparameters_2eproto.base);
  return *internal_default_instance();
}


void PrioAlgorithmParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:private_statistics.prio.proto.PrioAlgorithmParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&bins_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hamming_weight_) -
        reinterpret_cast<char*>(&bins_)) + sizeof(hamming_weight_));
    number_servers_ = 2;
    epsilon_ = 12;
    prime_ = PROTOBUF_ULONGLONG(4293918721);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrioAlgorithmParameters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 bins = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_bins(&has_bits);
          bins_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double epsilon = 2 [default = 12];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_epsilon(&has_bits);
          epsilon_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional uint64 prime = 3 [default = 4293918721];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_prime(&has_bits);
          prime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 number_servers = 4 [default = 2];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_number_servers(&has_bits);
          number_servers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 hamming_weight = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_hamming_weight(&has_bits);
          hamming_weight_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrioAlgorithmParameters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:private_statistics.prio.proto.PrioAlgorithmParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 bins = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_bins(), target);
  }

  // optional double epsilon = 2 [default = 12];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_epsilon(), target);
  }

  // optional uint64 prime = 3 [default = 4293918721];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_prime(), target);
  }

  // optional int32 number_servers = 4 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_number_servers(), target);
  }

  // optional int32 hamming_weight = 5;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_hamming_weight(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:private_statistics.prio.proto.PrioAlgorithmParameters)
  return target;
}

size_t PrioAlgorithmParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:private_statistics.prio.proto.PrioAlgorithmParameters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional int32 bins = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_bins());
    }

    // optional int32 hamming_weight = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_hamming_weight());
    }

    // optional int32 number_servers = 4 [default = 2];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_number_servers());
    }

    // optional double epsilon = 2 [default = 12];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional uint64 prime = 3 [default = 4293918721];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_prime());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrioAlgorithmParameters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:private_statistics.prio.proto.PrioAlgorithmParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const PrioAlgorithmParameters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrioAlgorithmParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:private_statistics.prio.proto.PrioAlgorithmParameters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:private_statistics.prio.proto.PrioAlgorithmParameters)
    MergeFrom(*source);
  }
}

void PrioAlgorithmParameters::MergeFrom(const PrioAlgorithmParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:private_statistics.prio.proto.PrioAlgorithmParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      bins_ = from.bins_;
    }
    if (cached_has_bits & 0x00000002u) {
      hamming_weight_ = from.hamming_weight_;
    }
    if (cached_has_bits & 0x00000004u) {
      number_servers_ = from.number_servers_;
    }
    if (cached_has_bits & 0x00000008u) {
      epsilon_ = from.epsilon_;
    }
    if (cached_has_bits & 0x00000010u) {
      prime_ = from.prime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrioAlgorithmParameters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:private_statistics.prio.proto.PrioAlgorithmParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrioAlgorithmParameters::CopyFrom(const PrioAlgorithmParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:private_statistics.prio.proto.PrioAlgorithmParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrioAlgorithmParameters::IsInitialized() const {
  return true;
}

void PrioAlgorithmParameters::InternalSwap(PrioAlgorithmParameters* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PrioAlgorithmParameters, hamming_weight_)
      + sizeof(PrioAlgorithmParameters::hamming_weight_)
      - PROTOBUF_FIELD_OFFSET(PrioAlgorithmParameters, bins_)>(
          reinterpret_cast<char*>(&bins_),
          reinterpret_cast<char*>(&other->bins_));
  swap(number_servers_, other->number_servers_);
  swap(epsilon_, other->epsilon_);
  swap(prime_, other->prime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrioAlgorithmParameters::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace prio
}  // namespace private_statistics
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::private_statistics::prio::proto::PrioAlgorithmParameters* Arena::CreateMaybeMessage< ::private_statistics::prio::proto::PrioAlgorithmParameters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::private_statistics::prio::proto::PrioAlgorithmParameters >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
