// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prio/proto/algorithm_parameters.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_prio_2fproto_2falgorithm_5fparameters_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_prio_2fproto_2falgorithm_5fparameters_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_prio_2fproto_2falgorithm_5fparameters_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_prio_2fproto_2falgorithm_5fparameters_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_prio_2fproto_2falgorithm_5fparameters_2eproto;
namespace private_statistics {
namespace prio {
namespace proto {
class PrioAlgorithmParameters;
class PrioAlgorithmParametersDefaultTypeInternal;
extern PrioAlgorithmParametersDefaultTypeInternal _PrioAlgorithmParameters_default_instance_;
}  // namespace proto
}  // namespace prio
}  // namespace private_statistics
PROTOBUF_NAMESPACE_OPEN
template<> ::private_statistics::prio::proto::PrioAlgorithmParameters* Arena::CreateMaybeMessage<::private_statistics::prio::proto::PrioAlgorithmParameters>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace private_statistics {
namespace prio {
namespace proto {

// ===================================================================

class PrioAlgorithmParameters PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:private_statistics.prio.proto.PrioAlgorithmParameters) */ {
 public:
  inline PrioAlgorithmParameters() : PrioAlgorithmParameters(nullptr) {}
  virtual ~PrioAlgorithmParameters();

  PrioAlgorithmParameters(const PrioAlgorithmParameters& from);
  PrioAlgorithmParameters(PrioAlgorithmParameters&& from) noexcept
    : PrioAlgorithmParameters() {
    *this = ::std::move(from);
  }

  inline PrioAlgorithmParameters& operator=(const PrioAlgorithmParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrioAlgorithmParameters& operator=(PrioAlgorithmParameters&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PrioAlgorithmParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PrioAlgorithmParameters* internal_default_instance() {
    return reinterpret_cast<const PrioAlgorithmParameters*>(
               &_PrioAlgorithmParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PrioAlgorithmParameters& a, PrioAlgorithmParameters& b) {
    a.Swap(&b);
  }
  inline void Swap(PrioAlgorithmParameters* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrioAlgorithmParameters* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PrioAlgorithmParameters* New() const final {
    return CreateMaybeMessage<PrioAlgorithmParameters>(nullptr);
  }

  PrioAlgorithmParameters* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PrioAlgorithmParameters>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PrioAlgorithmParameters& from);
  void MergeFrom(const PrioAlgorithmParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PrioAlgorithmParameters* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "private_statistics.prio.proto.PrioAlgorithmParameters";
  }
  protected:
  explicit PrioAlgorithmParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_prio_2fproto_2falgorithm_5fparameters_2eproto);
    return ::descriptor_table_prio_2fproto_2falgorithm_5fparameters_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBinsFieldNumber = 1,
    kHammingWeightFieldNumber = 5,
    kNumberServersFieldNumber = 4,
    kEpsilonFieldNumber = 2,
    kPrimeFieldNumber = 3,
  };
  // optional int32 bins = 1;
  bool has_bins() const;
  private:
  bool _internal_has_bins() const;
  public:
  void clear_bins();
  ::PROTOBUF_NAMESPACE_ID::int32 bins() const;
  void set_bins(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bins() const;
  void _internal_set_bins(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 hamming_weight = 5;
  bool has_hamming_weight() const;
  private:
  bool _internal_has_hamming_weight() const;
  public:
  void clear_hamming_weight();
  ::PROTOBUF_NAMESPACE_ID::int32 hamming_weight() const;
  void set_hamming_weight(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hamming_weight() const;
  void _internal_set_hamming_weight(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 number_servers = 4 [default = 2];
  bool has_number_servers() const;
  private:
  bool _internal_has_number_servers() const;
  public:
  void clear_number_servers();
  ::PROTOBUF_NAMESPACE_ID::int32 number_servers() const;
  void set_number_servers(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_number_servers() const;
  void _internal_set_number_servers(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional double epsilon = 2 [default = 12];
  bool has_epsilon() const;
  private:
  bool _internal_has_epsilon() const;
  public:
  void clear_epsilon();
  double epsilon() const;
  void set_epsilon(double value);
  private:
  double _internal_epsilon() const;
  void _internal_set_epsilon(double value);
  public:

  // optional uint64 prime = 3 [default = 4293918721];
  bool has_prime() const;
  private:
  bool _internal_has_prime() const;
  public:
  void clear_prime();
  ::PROTOBUF_NAMESPACE_ID::uint64 prime() const;
  void set_prime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_prime() const;
  void _internal_set_prime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:private_statistics.prio.proto.PrioAlgorithmParameters)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 bins_;
  ::PROTOBUF_NAMESPACE_ID::int32 hamming_weight_;
  ::PROTOBUF_NAMESPACE_ID::int32 number_servers_;
  double epsilon_;
  ::PROTOBUF_NAMESPACE_ID::uint64 prime_;
  friend struct ::TableStruct_prio_2fproto_2falgorithm_5fparameters_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PrioAlgorithmParameters

// optional int32 bins = 1;
inline bool PrioAlgorithmParameters::_internal_has_bins() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PrioAlgorithmParameters::has_bins() const {
  return _internal_has_bins();
}
inline void PrioAlgorithmParameters::clear_bins() {
  bins_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PrioAlgorithmParameters::_internal_bins() const {
  return bins_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PrioAlgorithmParameters::bins() const {
  // @@protoc_insertion_point(field_get:private_statistics.prio.proto.PrioAlgorithmParameters.bins)
  return _internal_bins();
}
inline void PrioAlgorithmParameters::_internal_set_bins(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  bins_ = value;
}
inline void PrioAlgorithmParameters::set_bins(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bins(value);
  // @@protoc_insertion_point(field_set:private_statistics.prio.proto.PrioAlgorithmParameters.bins)
}

// optional double epsilon = 2 [default = 12];
inline bool PrioAlgorithmParameters::_internal_has_epsilon() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PrioAlgorithmParameters::has_epsilon() const {
  return _internal_has_epsilon();
}
inline void PrioAlgorithmParameters::clear_epsilon() {
  epsilon_ = 12;
  _has_bits_[0] &= ~0x00000008u;
}
inline double PrioAlgorithmParameters::_internal_epsilon() const {
  return epsilon_;
}
inline double PrioAlgorithmParameters::epsilon() const {
  // @@protoc_insertion_point(field_get:private_statistics.prio.proto.PrioAlgorithmParameters.epsilon)
  return _internal_epsilon();
}
inline void PrioAlgorithmParameters::_internal_set_epsilon(double value) {
  _has_bits_[0] |= 0x00000008u;
  epsilon_ = value;
}
inline void PrioAlgorithmParameters::set_epsilon(double value) {
  _internal_set_epsilon(value);
  // @@protoc_insertion_point(field_set:private_statistics.prio.proto.PrioAlgorithmParameters.epsilon)
}

// optional uint64 prime = 3 [default = 4293918721];
inline bool PrioAlgorithmParameters::_internal_has_prime() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PrioAlgorithmParameters::has_prime() const {
  return _internal_has_prime();
}
inline void PrioAlgorithmParameters::clear_prime() {
  prime_ = PROTOBUF_ULONGLONG(4293918721);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PrioAlgorithmParameters::_internal_prime() const {
  return prime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PrioAlgorithmParameters::prime() const {
  // @@protoc_insertion_point(field_get:private_statistics.prio.proto.PrioAlgorithmParameters.prime)
  return _internal_prime();
}
inline void PrioAlgorithmParameters::_internal_set_prime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  prime_ = value;
}
inline void PrioAlgorithmParameters::set_prime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_prime(value);
  // @@protoc_insertion_point(field_set:private_statistics.prio.proto.PrioAlgorithmParameters.prime)
}

// optional int32 number_servers = 4 [default = 2];
inline bool PrioAlgorithmParameters::_internal_has_number_servers() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PrioAlgorithmParameters::has_number_servers() const {
  return _internal_has_number_servers();
}
inline void PrioAlgorithmParameters::clear_number_servers() {
  number_servers_ = 2;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PrioAlgorithmParameters::_internal_number_servers() const {
  return number_servers_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PrioAlgorithmParameters::number_servers() const {
  // @@protoc_insertion_point(field_get:private_statistics.prio.proto.PrioAlgorithmParameters.number_servers)
  return _internal_number_servers();
}
inline void PrioAlgorithmParameters::_internal_set_number_servers(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  number_servers_ = value;
}
inline void PrioAlgorithmParameters::set_number_servers(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_number_servers(value);
  // @@protoc_insertion_point(field_set:private_statistics.prio.proto.PrioAlgorithmParameters.number_servers)
}

// optional int32 hamming_weight = 5;
inline bool PrioAlgorithmParameters::_internal_has_hamming_weight() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PrioAlgorithmParameters::has_hamming_weight() const {
  return _internal_has_hamming_weight();
}
inline void PrioAlgorithmParameters::clear_hamming_weight() {
  hamming_weight_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PrioAlgorithmParameters::_internal_hamming_weight() const {
  return hamming_weight_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PrioAlgorithmParameters::hamming_weight() const {
  // @@protoc_insertion_point(field_get:private_statistics.prio.proto.PrioAlgorithmParameters.hamming_weight)
  return _internal_hamming_weight();
}
inline void PrioAlgorithmParameters::_internal_set_hamming_weight(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  hamming_weight_ = value;
}
inline void PrioAlgorithmParameters::set_hamming_weight(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hamming_weight(value);
  // @@protoc_insertion_point(field_set:private_statistics.prio.proto.PrioAlgorithmParameters.hamming_weight)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace prio
}  // namespace private_statistics

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_prio_2fproto_2falgorithm_5fparameters_2eproto
