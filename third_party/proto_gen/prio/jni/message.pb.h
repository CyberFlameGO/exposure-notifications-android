// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prio/jni/message.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_prio_2fjni_2fmessage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_prio_2fjni_2fmessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "prio/proto/algorithm_parameters.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_prio_2fjni_2fmessage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_prio_2fjni_2fmessage_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_prio_2fjni_2fmessage_2eproto;
namespace private_statistics {
namespace prio {
namespace proto {
class CreatePacketsParameters;
class CreatePacketsParametersDefaultTypeInternal;
extern CreatePacketsParametersDefaultTypeInternal _CreatePacketsParameters_default_instance_;
class CreatePacketsResponse;
class CreatePacketsResponseDefaultTypeInternal;
extern CreatePacketsResponseDefaultTypeInternal _CreatePacketsResponse_default_instance_;
class ResponseStatus;
class ResponseStatusDefaultTypeInternal;
extern ResponseStatusDefaultTypeInternal _ResponseStatus_default_instance_;
}  // namespace proto
}  // namespace prio
}  // namespace private_statistics
PROTOBUF_NAMESPACE_OPEN
template<> ::private_statistics::prio::proto::CreatePacketsParameters* Arena::CreateMaybeMessage<::private_statistics::prio::proto::CreatePacketsParameters>(Arena*);
template<> ::private_statistics::prio::proto::CreatePacketsResponse* Arena::CreateMaybeMessage<::private_statistics::prio::proto::CreatePacketsResponse>(Arena*);
template<> ::private_statistics::prio::proto::ResponseStatus* Arena::CreateMaybeMessage<::private_statistics::prio::proto::ResponseStatus>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace private_statistics {
namespace prio {
namespace proto {

enum ResponseStatus_StatusCode : int {
  ResponseStatus_StatusCode_UNKNOWN_FAILURE = 0,
  ResponseStatus_StatusCode_OK = 1,
  ResponseStatus_StatusCode_CANCELLED_FAILURE = 2,
  ResponseStatus_StatusCode_INVALID_PARAMETER_FAILURE = 3
};
bool ResponseStatus_StatusCode_IsValid(int value);
constexpr ResponseStatus_StatusCode ResponseStatus_StatusCode_StatusCode_MIN = ResponseStatus_StatusCode_UNKNOWN_FAILURE;
constexpr ResponseStatus_StatusCode ResponseStatus_StatusCode_StatusCode_MAX = ResponseStatus_StatusCode_INVALID_PARAMETER_FAILURE;
constexpr int ResponseStatus_StatusCode_StatusCode_ARRAYSIZE = ResponseStatus_StatusCode_StatusCode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ResponseStatus_StatusCode_descriptor();
template<typename T>
inline const std::string& ResponseStatus_StatusCode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ResponseStatus_StatusCode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ResponseStatus_StatusCode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ResponseStatus_StatusCode_descriptor(), enum_t_value);
}
inline bool ResponseStatus_StatusCode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ResponseStatus_StatusCode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ResponseStatus_StatusCode>(
    ResponseStatus_StatusCode_descriptor(), name, value);
}
// ===================================================================

class ResponseStatus PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:private_statistics.prio.proto.ResponseStatus) */ {
 public:
  inline ResponseStatus() : ResponseStatus(nullptr) {}
  virtual ~ResponseStatus();

  ResponseStatus(const ResponseStatus& from);
  ResponseStatus(ResponseStatus&& from) noexcept
    : ResponseStatus() {
    *this = ::std::move(from);
  }

  inline ResponseStatus& operator=(const ResponseStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResponseStatus& operator=(ResponseStatus&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResponseStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseStatus* internal_default_instance() {
    return reinterpret_cast<const ResponseStatus*>(
               &_ResponseStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ResponseStatus& a, ResponseStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(ResponseStatus* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResponseStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResponseStatus* New() const final {
    return CreateMaybeMessage<ResponseStatus>(nullptr);
  }

  ResponseStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResponseStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResponseStatus& from);
  void MergeFrom(const ResponseStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponseStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "private_statistics.prio.proto.ResponseStatus";
  }
  protected:
  explicit ResponseStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_prio_2fjni_2fmessage_2eproto);
    return ::descriptor_table_prio_2fjni_2fmessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ResponseStatus_StatusCode StatusCode;
  static constexpr StatusCode UNKNOWN_FAILURE =
    ResponseStatus_StatusCode_UNKNOWN_FAILURE;
  static constexpr StatusCode OK =
    ResponseStatus_StatusCode_OK;
  static constexpr StatusCode CANCELLED_FAILURE =
    ResponseStatus_StatusCode_CANCELLED_FAILURE;
  static constexpr StatusCode INVALID_PARAMETER_FAILURE =
    ResponseStatus_StatusCode_INVALID_PARAMETER_FAILURE;
  static inline bool StatusCode_IsValid(int value) {
    return ResponseStatus_StatusCode_IsValid(value);
  }
  static constexpr StatusCode StatusCode_MIN =
    ResponseStatus_StatusCode_StatusCode_MIN;
  static constexpr StatusCode StatusCode_MAX =
    ResponseStatus_StatusCode_StatusCode_MAX;
  static constexpr int StatusCode_ARRAYSIZE =
    ResponseStatus_StatusCode_StatusCode_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  StatusCode_descriptor() {
    return ResponseStatus_StatusCode_descriptor();
  }
  template<typename T>
  static inline const std::string& StatusCode_Name(T enum_t_value) {
    static_assert(::std::is_same<T, StatusCode>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function StatusCode_Name.");
    return ResponseStatus_StatusCode_Name(enum_t_value);
  }
  static inline bool StatusCode_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      StatusCode* value) {
    return ResponseStatus_StatusCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kErrorDetailsFieldNumber = 2,
    kStatusCodeFieldNumber = 1,
  };
  // optional string error_details = 2;
  bool has_error_details() const;
  private:
  bool _internal_has_error_details() const;
  public:
  void clear_error_details();
  const std::string& error_details() const;
  void set_error_details(const std::string& value);
  void set_error_details(std::string&& value);
  void set_error_details(const char* value);
  void set_error_details(const char* value, size_t size);
  std::string* mutable_error_details();
  std::string* release_error_details();
  void set_allocated_error_details(std::string* error_details);
  private:
  const std::string& _internal_error_details() const;
  void _internal_set_error_details(const std::string& value);
  std::string* _internal_mutable_error_details();
  public:

  // optional .private_statistics.prio.proto.ResponseStatus.StatusCode status_code = 1 [default = UNKNOWN_FAILURE];
  bool has_status_code() const;
  private:
  bool _internal_has_status_code() const;
  public:
  void clear_status_code();
  ::private_statistics::prio::proto::ResponseStatus_StatusCode status_code() const;
  void set_status_code(::private_statistics::prio::proto::ResponseStatus_StatusCode value);
  private:
  ::private_statistics::prio::proto::ResponseStatus_StatusCode _internal_status_code() const;
  void _internal_set_status_code(::private_statistics::prio::proto::ResponseStatus_StatusCode value);
  public:

  // @@protoc_insertion_point(class_scope:private_statistics.prio.proto.ResponseStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr error_details_;
  int status_code_;
  friend struct ::TableStruct_prio_2fjni_2fmessage_2eproto;
};
// -------------------------------------------------------------------

class CreatePacketsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:private_statistics.prio.proto.CreatePacketsResponse) */ {
 public:
  inline CreatePacketsResponse() : CreatePacketsResponse(nullptr) {}
  virtual ~CreatePacketsResponse();

  CreatePacketsResponse(const CreatePacketsResponse& from);
  CreatePacketsResponse(CreatePacketsResponse&& from) noexcept
    : CreatePacketsResponse() {
    *this = ::std::move(from);
  }

  inline CreatePacketsResponse& operator=(const CreatePacketsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreatePacketsResponse& operator=(CreatePacketsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreatePacketsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreatePacketsResponse* internal_default_instance() {
    return reinterpret_cast<const CreatePacketsResponse*>(
               &_CreatePacketsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CreatePacketsResponse& a, CreatePacketsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreatePacketsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreatePacketsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreatePacketsResponse* New() const final {
    return CreateMaybeMessage<CreatePacketsResponse>(nullptr);
  }

  CreatePacketsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreatePacketsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreatePacketsResponse& from);
  void MergeFrom(const CreatePacketsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatePacketsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "private_statistics.prio.proto.CreatePacketsResponse";
  }
  protected:
  explicit CreatePacketsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_prio_2fjni_2fmessage_2eproto);
    return ::descriptor_table_prio_2fjni_2fmessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShareFieldNumber = 2,
    kResponseStatusFieldNumber = 1,
  };
  // repeated bytes share = 2;
  int share_size() const;
  private:
  int _internal_share_size() const;
  public:
  void clear_share();
  const std::string& share(int index) const;
  std::string* mutable_share(int index);
  void set_share(int index, const std::string& value);
  void set_share(int index, std::string&& value);
  void set_share(int index, const char* value);
  void set_share(int index, const void* value, size_t size);
  std::string* add_share();
  void add_share(const std::string& value);
  void add_share(std::string&& value);
  void add_share(const char* value);
  void add_share(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& share() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_share();
  private:
  const std::string& _internal_share(int index) const;
  std::string* _internal_add_share();
  public:

  // optional .private_statistics.prio.proto.ResponseStatus response_status = 1;
  bool has_response_status() const;
  private:
  bool _internal_has_response_status() const;
  public:
  void clear_response_status();
  const ::private_statistics::prio::proto::ResponseStatus& response_status() const;
  ::private_statistics::prio::proto::ResponseStatus* release_response_status();
  ::private_statistics::prio::proto::ResponseStatus* mutable_response_status();
  void set_allocated_response_status(::private_statistics::prio::proto::ResponseStatus* response_status);
  private:
  const ::private_statistics::prio::proto::ResponseStatus& _internal_response_status() const;
  ::private_statistics::prio::proto::ResponseStatus* _internal_mutable_response_status();
  public:
  void unsafe_arena_set_allocated_response_status(
      ::private_statistics::prio::proto::ResponseStatus* response_status);
  ::private_statistics::prio::proto::ResponseStatus* unsafe_arena_release_response_status();

  // @@protoc_insertion_point(class_scope:private_statistics.prio.proto.CreatePacketsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> share_;
  ::private_statistics::prio::proto::ResponseStatus* response_status_;
  friend struct ::TableStruct_prio_2fjni_2fmessage_2eproto;
};
// -------------------------------------------------------------------

class CreatePacketsParameters PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:private_statistics.prio.proto.CreatePacketsParameters) */ {
 public:
  inline CreatePacketsParameters() : CreatePacketsParameters(nullptr) {}
  virtual ~CreatePacketsParameters();

  CreatePacketsParameters(const CreatePacketsParameters& from);
  CreatePacketsParameters(CreatePacketsParameters&& from) noexcept
    : CreatePacketsParameters() {
    *this = ::std::move(from);
  }

  inline CreatePacketsParameters& operator=(const CreatePacketsParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreatePacketsParameters& operator=(CreatePacketsParameters&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreatePacketsParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreatePacketsParameters* internal_default_instance() {
    return reinterpret_cast<const CreatePacketsParameters*>(
               &_CreatePacketsParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CreatePacketsParameters& a, CreatePacketsParameters& b) {
    a.Swap(&b);
  }
  inline void Swap(CreatePacketsParameters* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreatePacketsParameters* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreatePacketsParameters* New() const final {
    return CreateMaybeMessage<CreatePacketsParameters>(nullptr);
  }

  CreatePacketsParameters* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreatePacketsParameters>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreatePacketsParameters& from);
  void MergeFrom(const CreatePacketsParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatePacketsParameters* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "private_statistics.prio.proto.CreatePacketsParameters";
  }
  protected:
  explicit CreatePacketsParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_prio_2fjni_2fmessage_2eproto);
    return ::descriptor_table_prio_2fjni_2fmessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPublicKeysFieldNumber = 2,
    kDataBitsFieldNumber = 3,
    kPrioParametersFieldNumber = 1,
  };
  // repeated string public_keys = 2;
  int public_keys_size() const;
  private:
  int _internal_public_keys_size() const;
  public:
  void clear_public_keys();
  const std::string& public_keys(int index) const;
  std::string* mutable_public_keys(int index);
  void set_public_keys(int index, const std::string& value);
  void set_public_keys(int index, std::string&& value);
  void set_public_keys(int index, const char* value);
  void set_public_keys(int index, const char* value, size_t size);
  std::string* add_public_keys();
  void add_public_keys(const std::string& value);
  void add_public_keys(std::string&& value);
  void add_public_keys(const char* value);
  void add_public_keys(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& public_keys() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_public_keys();
  private:
  const std::string& _internal_public_keys(int index) const;
  std::string* _internal_add_public_keys();
  public:

  // repeated uint32 data_bits = 3;
  int data_bits_size() const;
  private:
  int _internal_data_bits_size() const;
  public:
  void clear_data_bits();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_bits(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_data_bits() const;
  void _internal_add_data_bits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_data_bits();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 data_bits(int index) const;
  void set_data_bits(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_data_bits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      data_bits() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_data_bits();

  // optional .private_statistics.prio.proto.PrioAlgorithmParameters prio_parameters = 1;
  bool has_prio_parameters() const;
  private:
  bool _internal_has_prio_parameters() const;
  public:
  void clear_prio_parameters();
  const ::private_statistics::prio::proto::PrioAlgorithmParameters& prio_parameters() const;
  ::private_statistics::prio::proto::PrioAlgorithmParameters* release_prio_parameters();
  ::private_statistics::prio::proto::PrioAlgorithmParameters* mutable_prio_parameters();
  void set_allocated_prio_parameters(::private_statistics::prio::proto::PrioAlgorithmParameters* prio_parameters);
  private:
  const ::private_statistics::prio::proto::PrioAlgorithmParameters& _internal_prio_parameters() const;
  ::private_statistics::prio::proto::PrioAlgorithmParameters* _internal_mutable_prio_parameters();
  public:
  void unsafe_arena_set_allocated_prio_parameters(
      ::private_statistics::prio::proto::PrioAlgorithmParameters* prio_parameters);
  ::private_statistics::prio::proto::PrioAlgorithmParameters* unsafe_arena_release_prio_parameters();

  // @@protoc_insertion_point(class_scope:private_statistics.prio.proto.CreatePacketsParameters)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> public_keys_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > data_bits_;
  ::private_statistics::prio::proto::PrioAlgorithmParameters* prio_parameters_;
  friend struct ::TableStruct_prio_2fjni_2fmessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ResponseStatus

// optional .private_statistics.prio.proto.ResponseStatus.StatusCode status_code = 1 [default = UNKNOWN_FAILURE];
inline bool ResponseStatus::_internal_has_status_code() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ResponseStatus::has_status_code() const {
  return _internal_has_status_code();
}
inline void ResponseStatus::clear_status_code() {
  status_code_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::private_statistics::prio::proto::ResponseStatus_StatusCode ResponseStatus::_internal_status_code() const {
  return static_cast< ::private_statistics::prio::proto::ResponseStatus_StatusCode >(status_code_);
}
inline ::private_statistics::prio::proto::ResponseStatus_StatusCode ResponseStatus::status_code() const {
  // @@protoc_insertion_point(field_get:private_statistics.prio.proto.ResponseStatus.status_code)
  return _internal_status_code();
}
inline void ResponseStatus::_internal_set_status_code(::private_statistics::prio::proto::ResponseStatus_StatusCode value) {
  assert(::private_statistics::prio::proto::ResponseStatus_StatusCode_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  status_code_ = value;
}
inline void ResponseStatus::set_status_code(::private_statistics::prio::proto::ResponseStatus_StatusCode value) {
  _internal_set_status_code(value);
  // @@protoc_insertion_point(field_set:private_statistics.prio.proto.ResponseStatus.status_code)
}

// optional string error_details = 2;
inline bool ResponseStatus::_internal_has_error_details() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ResponseStatus::has_error_details() const {
  return _internal_has_error_details();
}
inline void ResponseStatus::clear_error_details() {
  error_details_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ResponseStatus::error_details() const {
  // @@protoc_insertion_point(field_get:private_statistics.prio.proto.ResponseStatus.error_details)
  return _internal_error_details();
}
inline void ResponseStatus::set_error_details(const std::string& value) {
  _internal_set_error_details(value);
  // @@protoc_insertion_point(field_set:private_statistics.prio.proto.ResponseStatus.error_details)
}
inline std::string* ResponseStatus::mutable_error_details() {
  // @@protoc_insertion_point(field_mutable:private_statistics.prio.proto.ResponseStatus.error_details)
  return _internal_mutable_error_details();
}
inline const std::string& ResponseStatus::_internal_error_details() const {
  return error_details_.Get();
}
inline void ResponseStatus::_internal_set_error_details(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  error_details_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ResponseStatus::set_error_details(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  error_details_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:private_statistics.prio.proto.ResponseStatus.error_details)
}
inline void ResponseStatus::set_error_details(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  error_details_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:private_statistics.prio.proto.ResponseStatus.error_details)
}
inline void ResponseStatus::set_error_details(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  error_details_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:private_statistics.prio.proto.ResponseStatus.error_details)
}
inline std::string* ResponseStatus::_internal_mutable_error_details() {
  _has_bits_[0] |= 0x00000001u;
  return error_details_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ResponseStatus::release_error_details() {
  // @@protoc_insertion_point(field_release:private_statistics.prio.proto.ResponseStatus.error_details)
  if (!_internal_has_error_details()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return error_details_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ResponseStatus::set_allocated_error_details(std::string* error_details) {
  if (error_details != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  error_details_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), error_details,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:private_statistics.prio.proto.ResponseStatus.error_details)
}

// -------------------------------------------------------------------

// CreatePacketsResponse

// optional .private_statistics.prio.proto.ResponseStatus response_status = 1;
inline bool CreatePacketsResponse::_internal_has_response_status() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || response_status_ != nullptr);
  return value;
}
inline bool CreatePacketsResponse::has_response_status() const {
  return _internal_has_response_status();
}
inline void CreatePacketsResponse::clear_response_status() {
  if (response_status_ != nullptr) response_status_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::private_statistics::prio::proto::ResponseStatus& CreatePacketsResponse::_internal_response_status() const {
  const ::private_statistics::prio::proto::ResponseStatus* p = response_status_;
  return p != nullptr ? *p : *reinterpret_cast<const ::private_statistics::prio::proto::ResponseStatus*>(
      &::private_statistics::prio::proto::_ResponseStatus_default_instance_);
}
inline const ::private_statistics::prio::proto::ResponseStatus& CreatePacketsResponse::response_status() const {
  // @@protoc_insertion_point(field_get:private_statistics.prio.proto.CreatePacketsResponse.response_status)
  return _internal_response_status();
}
inline void CreatePacketsResponse::unsafe_arena_set_allocated_response_status(
    ::private_statistics::prio::proto::ResponseStatus* response_status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(response_status_);
  }
  response_status_ = response_status;
  if (response_status) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:private_statistics.prio.proto.CreatePacketsResponse.response_status)
}
inline ::private_statistics::prio::proto::ResponseStatus* CreatePacketsResponse::release_response_status() {
  _has_bits_[0] &= ~0x00000001u;
  ::private_statistics::prio::proto::ResponseStatus* temp = response_status_;
  response_status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::private_statistics::prio::proto::ResponseStatus* CreatePacketsResponse::unsafe_arena_release_response_status() {
  // @@protoc_insertion_point(field_release:private_statistics.prio.proto.CreatePacketsResponse.response_status)
  _has_bits_[0] &= ~0x00000001u;
  ::private_statistics::prio::proto::ResponseStatus* temp = response_status_;
  response_status_ = nullptr;
  return temp;
}
inline ::private_statistics::prio::proto::ResponseStatus* CreatePacketsResponse::_internal_mutable_response_status() {
  _has_bits_[0] |= 0x00000001u;
  if (response_status_ == nullptr) {
    auto* p = CreateMaybeMessage<::private_statistics::prio::proto::ResponseStatus>(GetArena());
    response_status_ = p;
  }
  return response_status_;
}
inline ::private_statistics::prio::proto::ResponseStatus* CreatePacketsResponse::mutable_response_status() {
  // @@protoc_insertion_point(field_mutable:private_statistics.prio.proto.CreatePacketsResponse.response_status)
  return _internal_mutable_response_status();
}
inline void CreatePacketsResponse::set_allocated_response_status(::private_statistics::prio::proto::ResponseStatus* response_status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete response_status_;
  }
  if (response_status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(response_status);
    if (message_arena != submessage_arena) {
      response_status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, response_status, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  response_status_ = response_status;
  // @@protoc_insertion_point(field_set_allocated:private_statistics.prio.proto.CreatePacketsResponse.response_status)
}

// repeated bytes share = 2;
inline int CreatePacketsResponse::_internal_share_size() const {
  return share_.size();
}
inline int CreatePacketsResponse::share_size() const {
  return _internal_share_size();
}
inline void CreatePacketsResponse::clear_share() {
  share_.Clear();
}
inline std::string* CreatePacketsResponse::add_share() {
  // @@protoc_insertion_point(field_add_mutable:private_statistics.prio.proto.CreatePacketsResponse.share)
  return _internal_add_share();
}
inline const std::string& CreatePacketsResponse::_internal_share(int index) const {
  return share_.Get(index);
}
inline const std::string& CreatePacketsResponse::share(int index) const {
  // @@protoc_insertion_point(field_get:private_statistics.prio.proto.CreatePacketsResponse.share)
  return _internal_share(index);
}
inline std::string* CreatePacketsResponse::mutable_share(int index) {
  // @@protoc_insertion_point(field_mutable:private_statistics.prio.proto.CreatePacketsResponse.share)
  return share_.Mutable(index);
}
inline void CreatePacketsResponse::set_share(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:private_statistics.prio.proto.CreatePacketsResponse.share)
  share_.Mutable(index)->assign(value);
}
inline void CreatePacketsResponse::set_share(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:private_statistics.prio.proto.CreatePacketsResponse.share)
  share_.Mutable(index)->assign(std::move(value));
}
inline void CreatePacketsResponse::set_share(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  share_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:private_statistics.prio.proto.CreatePacketsResponse.share)
}
inline void CreatePacketsResponse::set_share(int index, const void* value, size_t size) {
  share_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:private_statistics.prio.proto.CreatePacketsResponse.share)
}
inline std::string* CreatePacketsResponse::_internal_add_share() {
  return share_.Add();
}
inline void CreatePacketsResponse::add_share(const std::string& value) {
  share_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:private_statistics.prio.proto.CreatePacketsResponse.share)
}
inline void CreatePacketsResponse::add_share(std::string&& value) {
  share_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:private_statistics.prio.proto.CreatePacketsResponse.share)
}
inline void CreatePacketsResponse::add_share(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  share_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:private_statistics.prio.proto.CreatePacketsResponse.share)
}
inline void CreatePacketsResponse::add_share(const void* value, size_t size) {
  share_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:private_statistics.prio.proto.CreatePacketsResponse.share)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CreatePacketsResponse::share() const {
  // @@protoc_insertion_point(field_list:private_statistics.prio.proto.CreatePacketsResponse.share)
  return share_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CreatePacketsResponse::mutable_share() {
  // @@protoc_insertion_point(field_mutable_list:private_statistics.prio.proto.CreatePacketsResponse.share)
  return &share_;
}

// -------------------------------------------------------------------

// CreatePacketsParameters

// optional .private_statistics.prio.proto.PrioAlgorithmParameters prio_parameters = 1;
inline bool CreatePacketsParameters::_internal_has_prio_parameters() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || prio_parameters_ != nullptr);
  return value;
}
inline bool CreatePacketsParameters::has_prio_parameters() const {
  return _internal_has_prio_parameters();
}
inline const ::private_statistics::prio::proto::PrioAlgorithmParameters& CreatePacketsParameters::_internal_prio_parameters() const {
  const ::private_statistics::prio::proto::PrioAlgorithmParameters* p = prio_parameters_;
  return p != nullptr ? *p : *reinterpret_cast<const ::private_statistics::prio::proto::PrioAlgorithmParameters*>(
      &::private_statistics::prio::proto::_PrioAlgorithmParameters_default_instance_);
}
inline const ::private_statistics::prio::proto::PrioAlgorithmParameters& CreatePacketsParameters::prio_parameters() const {
  // @@protoc_insertion_point(field_get:private_statistics.prio.proto.CreatePacketsParameters.prio_parameters)
  return _internal_prio_parameters();
}
inline void CreatePacketsParameters::unsafe_arena_set_allocated_prio_parameters(
    ::private_statistics::prio::proto::PrioAlgorithmParameters* prio_parameters) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(prio_parameters_);
  }
  prio_parameters_ = prio_parameters;
  if (prio_parameters) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:private_statistics.prio.proto.CreatePacketsParameters.prio_parameters)
}
inline ::private_statistics::prio::proto::PrioAlgorithmParameters* CreatePacketsParameters::release_prio_parameters() {
  _has_bits_[0] &= ~0x00000001u;
  ::private_statistics::prio::proto::PrioAlgorithmParameters* temp = prio_parameters_;
  prio_parameters_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::private_statistics::prio::proto::PrioAlgorithmParameters* CreatePacketsParameters::unsafe_arena_release_prio_parameters() {
  // @@protoc_insertion_point(field_release:private_statistics.prio.proto.CreatePacketsParameters.prio_parameters)
  _has_bits_[0] &= ~0x00000001u;
  ::private_statistics::prio::proto::PrioAlgorithmParameters* temp = prio_parameters_;
  prio_parameters_ = nullptr;
  return temp;
}
inline ::private_statistics::prio::proto::PrioAlgorithmParameters* CreatePacketsParameters::_internal_mutable_prio_parameters() {
  _has_bits_[0] |= 0x00000001u;
  if (prio_parameters_ == nullptr) {
    auto* p = CreateMaybeMessage<::private_statistics::prio::proto::PrioAlgorithmParameters>(GetArena());
    prio_parameters_ = p;
  }
  return prio_parameters_;
}
inline ::private_statistics::prio::proto::PrioAlgorithmParameters* CreatePacketsParameters::mutable_prio_parameters() {
  // @@protoc_insertion_point(field_mutable:private_statistics.prio.proto.CreatePacketsParameters.prio_parameters)
  return _internal_mutable_prio_parameters();
}
inline void CreatePacketsParameters::set_allocated_prio_parameters(::private_statistics::prio::proto::PrioAlgorithmParameters* prio_parameters) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(prio_parameters_);
  }
  if (prio_parameters) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(prio_parameters)->GetArena();
    if (message_arena != submessage_arena) {
      prio_parameters = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, prio_parameters, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  prio_parameters_ = prio_parameters;
  // @@protoc_insertion_point(field_set_allocated:private_statistics.prio.proto.CreatePacketsParameters.prio_parameters)
}

// repeated string public_keys = 2;
inline int CreatePacketsParameters::_internal_public_keys_size() const {
  return public_keys_.size();
}
inline int CreatePacketsParameters::public_keys_size() const {
  return _internal_public_keys_size();
}
inline void CreatePacketsParameters::clear_public_keys() {
  public_keys_.Clear();
}
inline std::string* CreatePacketsParameters::add_public_keys() {
  // @@protoc_insertion_point(field_add_mutable:private_statistics.prio.proto.CreatePacketsParameters.public_keys)
  return _internal_add_public_keys();
}
inline const std::string& CreatePacketsParameters::_internal_public_keys(int index) const {
  return public_keys_.Get(index);
}
inline const std::string& CreatePacketsParameters::public_keys(int index) const {
  // @@protoc_insertion_point(field_get:private_statistics.prio.proto.CreatePacketsParameters.public_keys)
  return _internal_public_keys(index);
}
inline std::string* CreatePacketsParameters::mutable_public_keys(int index) {
  // @@protoc_insertion_point(field_mutable:private_statistics.prio.proto.CreatePacketsParameters.public_keys)
  return public_keys_.Mutable(index);
}
inline void CreatePacketsParameters::set_public_keys(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:private_statistics.prio.proto.CreatePacketsParameters.public_keys)
  public_keys_.Mutable(index)->assign(value);
}
inline void CreatePacketsParameters::set_public_keys(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:private_statistics.prio.proto.CreatePacketsParameters.public_keys)
  public_keys_.Mutable(index)->assign(std::move(value));
}
inline void CreatePacketsParameters::set_public_keys(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  public_keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:private_statistics.prio.proto.CreatePacketsParameters.public_keys)
}
inline void CreatePacketsParameters::set_public_keys(int index, const char* value, size_t size) {
  public_keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:private_statistics.prio.proto.CreatePacketsParameters.public_keys)
}
inline std::string* CreatePacketsParameters::_internal_add_public_keys() {
  return public_keys_.Add();
}
inline void CreatePacketsParameters::add_public_keys(const std::string& value) {
  public_keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:private_statistics.prio.proto.CreatePacketsParameters.public_keys)
}
inline void CreatePacketsParameters::add_public_keys(std::string&& value) {
  public_keys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:private_statistics.prio.proto.CreatePacketsParameters.public_keys)
}
inline void CreatePacketsParameters::add_public_keys(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  public_keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:private_statistics.prio.proto.CreatePacketsParameters.public_keys)
}
inline void CreatePacketsParameters::add_public_keys(const char* value, size_t size) {
  public_keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:private_statistics.prio.proto.CreatePacketsParameters.public_keys)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CreatePacketsParameters::public_keys() const {
  // @@protoc_insertion_point(field_list:private_statistics.prio.proto.CreatePacketsParameters.public_keys)
  return public_keys_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CreatePacketsParameters::mutable_public_keys() {
  // @@protoc_insertion_point(field_mutable_list:private_statistics.prio.proto.CreatePacketsParameters.public_keys)
  return &public_keys_;
}

// repeated uint32 data_bits = 3;
inline int CreatePacketsParameters::_internal_data_bits_size() const {
  return data_bits_.size();
}
inline int CreatePacketsParameters::data_bits_size() const {
  return _internal_data_bits_size();
}
inline void CreatePacketsParameters::clear_data_bits() {
  data_bits_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CreatePacketsParameters::_internal_data_bits(int index) const {
  return data_bits_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CreatePacketsParameters::data_bits(int index) const {
  // @@protoc_insertion_point(field_get:private_statistics.prio.proto.CreatePacketsParameters.data_bits)
  return _internal_data_bits(index);
}
inline void CreatePacketsParameters::set_data_bits(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  data_bits_.Set(index, value);
  // @@protoc_insertion_point(field_set:private_statistics.prio.proto.CreatePacketsParameters.data_bits)
}
inline void CreatePacketsParameters::_internal_add_data_bits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  data_bits_.Add(value);
}
inline void CreatePacketsParameters::add_data_bits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_data_bits(value);
  // @@protoc_insertion_point(field_add:private_statistics.prio.proto.CreatePacketsParameters.data_bits)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CreatePacketsParameters::_internal_data_bits() const {
  return data_bits_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CreatePacketsParameters::data_bits() const {
  // @@protoc_insertion_point(field_list:private_statistics.prio.proto.CreatePacketsParameters.data_bits)
  return _internal_data_bits();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CreatePacketsParameters::_internal_mutable_data_bits() {
  return &data_bits_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CreatePacketsParameters::mutable_data_bits() {
  // @@protoc_insertion_point(field_mutable_list:private_statistics.prio.proto.CreatePacketsParameters.data_bits)
  return _internal_mutable_data_bits();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace prio
}  // namespace private_statistics

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::private_statistics::prio::proto::ResponseStatus_StatusCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::private_statistics::prio::proto::ResponseStatus_StatusCode>() {
  return ::private_statistics::prio::proto::ResponseStatus_StatusCode_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_prio_2fjni_2fmessage_2eproto
