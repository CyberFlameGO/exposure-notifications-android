{
  "formatVersion": 1,
  "database": {
    "version": 41,
    "identityHash": "a0b7e876b4dc9755d63c707fa0a782d2",
    "entities": [
      {
        "tableName": "AnalyticsLoggingEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`key` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `eventProto` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "eventProto",
            "columnName": "eventProto",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "key"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CountryEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`countryCode` TEXT NOT NULL, `lastSeenTimestampMillis` INTEGER NOT NULL, PRIMARY KEY(`countryCode`))",
        "fields": [
          {
            "fieldPath": "countryCode",
            "columnName": "countryCode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastSeenTimestampMillis",
            "columnName": "lastSeenTimestampMillis",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "countryCode"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DiagnosisEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `createdTimestampMs` INTEGER NOT NULL, `sharedStatus` TEXT, `verificationCode` TEXT, `longTermToken` TEXT, `certificate` TEXT, `testResult` TEXT, `onsetDate` TEXT, `isServerOnsetDate` INTEGER NOT NULL, `hasSymptoms` TEXT, `revisionToken` TEXT, `travelStatus` TEXT, `isCodeFromLink` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdTimestampMs",
            "columnName": "createdTimestampMs",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sharedStatus",
            "columnName": "sharedStatus",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "verificationCode",
            "columnName": "verificationCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "longTermToken",
            "columnName": "longTermToken",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "certificate",
            "columnName": "certificate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "testResult",
            "columnName": "testResult",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "onsetDate",
            "columnName": "onsetDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isServerOnsetDate",
            "columnName": "isServerOnsetDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hasSymptoms",
            "columnName": "hasSymptoms",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "revisionToken",
            "columnName": "revisionToken",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "travelStatus",
            "columnName": "travelStatus",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isCodeFromLink",
            "columnName": "isCodeFromLink",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DownloadServerEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`indexUri` TEXT NOT NULL, `mostRecentSuccessfulDownload` TEXT, PRIMARY KEY(`indexUri`))",
        "fields": [
          {
            "fieldPath": "indexUri",
            "columnName": "indexUri",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mostRecentSuccessfulDownload",
            "columnName": "mostRecentSuccessfulDownload",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "indexUri"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ExposureEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`dateDaysSinceEpoch` INTEGER NOT NULL, `exposureScore` REAL NOT NULL, PRIMARY KEY(`dateDaysSinceEpoch`))",
        "fields": [
          {
            "fieldPath": "dateDaysSinceEpoch",
            "columnName": "dateDaysSinceEpoch",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "exposureScore",
            "columnName": "exposureScore",
            "affinity": "REAL",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "dateDaysSinceEpoch"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "RevisionTokenEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `createdTimestampMs` INTEGER NOT NULL, `revisionToken` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdTimestampMs",
            "columnName": "createdTimestampMs",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "revisionToken",
            "columnName": "revisionToken",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "WorkerStatusEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`workerTaskNameAndStatus` TEXT NOT NULL, `lastRunTimestampMillis` INTEGER NOT NULL, PRIMARY KEY(`workerTaskNameAndStatus`))",
        "fields": [
          {
            "fieldPath": "workerTaskNameAndStatus",
            "columnName": "workerTaskNameAndStatus",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastRunTimestampMillis",
            "columnName": "lastRunTimestampMillis",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "workerTaskNameAndStatus"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ExposureCheckEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`checkTime` INTEGER NOT NULL, PRIMARY KEY(`checkTime`))",
        "fields": [
          {
            "fieldPath": "checkTime",
            "columnName": "checkTime",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "checkTime"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'a0b7e876b4dc9755d63c707fa0a782d2')"
    ]
  }
}